{"ast":null,"code":"import { RouteReuseStrategy } from '@angular/router';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module'; // Custom added\n\nimport { AuthModule } from './helperServices/auth/auth.module';\nimport { HttpInterceptorService } from './helperServices/auth/http-interceptor.service';\nimport { Network } from '@ionic-native/network/ngx';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@ngx-translate/core\";\nexport function createTranslateLoader(http) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [Network, {\n      provide: RouteReuseStrategy,\n      useClass: IonicRouteStrategy\n    }, {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpInterceptorService,\n      multi: true\n    }],\n    imports: [[BrowserModule, IonicModule.forRoot(), AppRoutingModule, AuthModule, TranslateModule.forRoot(), HttpClientModule, TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient]\n      }\n    })]]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module"}